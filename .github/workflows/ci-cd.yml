name: CI/CD Pipeline - Auth Fix

on:
  push:
    branches: [ main, master, 'fix/auth-500-*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  validate-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Environment validation
      run: node scripts/validate_env.mjs
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-minimum-32-characters-long-for-security
        MONGODB_URI: mongodb://localhost:27017/morning_challenge_test
        MONGODB_MOCK: true
        DISABLE_TIME_CHECK: true
    
    - name: Run TypeScript type check
      run: npm run type-check
    
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true
    
    - name: Run unit tests
      run: npm run test:run
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-minimum-32-characters-long-for-security
        MONGODB_URI: mongodb://localhost:27017/morning_challenge_test
        MONGODB_MOCK: true
        DISABLE_TIME_CHECK: true
    
    - name: Build production
      run: npm run build:production
      env:
        NODE_ENV: production
        JWT_SECRET: production-jwt-secret-minimum-32-characters-long-for-security
        MONGODB_URI: mongodb://localhost:27017/morning_challenge_prod
        MONGODB_MOCK: false

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build:production
      env:
        NODE_ENV: production
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./

  smoke-tests:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run smoke tests
      run: npm run smoke:production
      continue-on-error: true
      env:
        PRODUCTION_URL: ${{ secrets.PRODUCTION_URL }}